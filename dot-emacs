;; INSTALL THE maralade package repo.:
(require 'package)
(add-to-list 'package-archives
	     '("marmalade" . "http://marmalade-repo.org/packages/"))
(package-initialize)
(add-to-list 'package-archives
	     '("melpa" . "http://melpa.milkbox.net/packages/") t)
(package-initialize)
 (package-refresh-contents)

;; check if the packages is installed; if not, install it.
(mapc
 (lambda (package)
   (or (package-installed-p package)
       (if (y-or-n-p (format "Package %s is missing. Install it? " package))
	   (package-install package))))
 '(dired+ magit rainbow-mode jedi helm evil puppet-mode
	  flymake flymake-puppet flymake-jshint helm-flymake puppetfile-mode flyspell-lazy flatland-theme
	  yaml-mode ace-jump-mode expand-region nginx-mode apache-mode flymake-python-pyflakes
	  twittering-mode multiple-cursors yasnippet confluence browse-kill-ring))

;; Enable evil for vim bindings
(require 'evil)
(evil-mode 1)

;; nginx and apache modes
(require 'nginx-mode)
(require 'apache-mode)

;; ACE-JUMP: http://www.emacswiki.org/emacs/AceJump
;; --------------------
;; Set mark
;; C-SPC
;; Jump to word
;; C-c SPC <First_letter_of_word> <LETTER>
;; Jump Back to mark
;; C-U C-SPC
(require 'ace-jump-mode)
(define-key global-map (kbd "C-c SPC") 'ace-jump-mode)



(setq x-select-enable-clipboard t)

(server-start)


(add-to-list 'load-path "~/.emacs.d/")


;; Helm
(require 'helm-config)
(require 'helm-flymake)
(global-set-key (kbd "C-c h") 'helm-mini)
(helm-mode 1)
(require 'helm-flymake)

;; Disable all the fricken menu bars...
(menu-bar-mode -1)
(toggle-scroll-bar -1)
(tool-bar-mode -1)

;; Load custom themes from ~/.emacs.d/themes
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (flatland)))
 '(custom-safe-themes (quote ("86f4407f65d848ccdbbbf7384de75ba320d26ccecd719d50239f2c36bec18628" "520d9a34832bb467bcaec55b3b1d15cacf5d62a9779dedce23046f039930a418" "15adb1c26eee48cbb677c67d1486a4db5c97e3cfffd1c3a4a4fc9651bcfbc5b1" "6e05b0a83b83b5efd63c74698e1ad6feaddf69a50b15a8b4a83b157aac45127c" "fe243221e262fe5144e89bb5025e7848cd9fb857ff5b2d8447d115e58fede8f7" default)))
 '(inhibit-startup-screen t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;; Puppet
(require 'puppetfile-mode)
(add-to-list 'auto-mode-alist '("Puppetfile\\'" . puppetfile-mode))

;; Editing files on remote machines
(setq tramp-default-method "ssh")

;;
(require 'flyspell-lazy)
(flyspell-lazy-mode 0)
(flyspell-mode 0)


;;
;;(setq erc-autojoin-channels-alist
;;      '(("freenode.net" "#puppet" "#puppetboard" "#shipyard" "#python")))
;;(erc :server "irc.freenode.net" :port 6667 :nick "dannyla")
;;(setq erc-hide-list '("JOIN" "PART" "QUIT"))

;; yaml mode for yaml files
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.yml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.yaml$" . yaml-mode))

;; check the crap out of python
(when (load "flymake" t)
  (defun flymake-pyflakes-init ()
    (let* ((temp-file (flymake-init-create-temp-buffer-copy
		       'flymake-create-temp-inplace))
	   (local-file (file-relative-name
			temp-file
			(file-name-directory buffer-file-name))))
      (list "pycheckers"  (list local-file))))
  (add-to-list 'flymake-allowed-file-name-masks
	       '("\\.py\\'" flymake-pyflakes-init)))

;; (add-to-list 'load-path "/path/to/py-autopep8.el/")
;; (require 'py-autopep8)
;; (add-hook 'before-save-hook 'python-fmt-before-save)


;; yaml mode for aml files
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.yml$" . yaml-mode))
(add-to-list 'auto-mode-alist '("\\.yaml$" . yaml-mode))

;; cool expand region/secltion via C-=
(require 'expand-region)
(global-set-key (kbd "C-=") 'er/expand-region)

;; Don't show the startup screen
(setq inhibit-startup-message t)

;; Display line and column numbers
(setq line-number-mode    t)
(setq column-number-mode  t)

;; Emacs gurus don't need no stinking scroll bars
(when (fboundp 'toggle-scroll-bar)
  (toggle-scroll-bar -1))

;; Explicitly show the end of a buffer
(set-default 'indicate-empty-lines t)

;; Emacs gurus don't need no stinking scroll bars
(when (fboundp 'toggle-scroll-bar)
  (toggle-scroll-bar -1))

;; Explicitly show the end of a buffer
(set-default 'indicate-empty-lines t)

;;
(require 'flymake-python-pyflakes)
(setq flymake-python-pyflakes-executable "flake8")

;; emacs-jedi
(autoload 'jedi:setup "jedi" nil t)
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:setup-keys t)                      ; optional
(setq jedi:complete-on-dot t)                 ; optional

;; fly-pyflakes
(require 'flymake-python-pyflakes)
(setq flymake-python-pyflakes-executable "flake8")
(add-hook 'python-mode-hook 'flymake-python-pyflakes-load)
(put 'dired-find-alternate-file 'disabled nil)

(defun cleanup-buffer ()
  "Perform a bunch of operations on the whitespace content of a buffer.
Including indent-buffer, which should not be called automatically on save."
  (interactive)
  (cleanup-buffer-safe)
  (indent-region (point-min) (point-max)))

(global-set-key (kbd "C-c n") 'cleanup-buffer)

(defun move-line-down ()
  (interactive)
  (let ((col (current-column)))
    (save-excursion
      (forward-line)
      (transpose-lines 1))
    (forward-line)
    (move-to-column col)))

(defun move-line-up ()
  (interactive)
  (let ((col (current-column)))
    (save-excursion
      (forward-line)
      (transpose-lines -1))
    (move-to-column col)))

(global-set-key (kbd "<C-S-up>") 'move-line-up)
(global-set-key (kbd "<C-S-down>") 'move-line-down)


;; Auto refresh buffers
(global-auto-revert-mode 1)

;; Also auto refresh dired, but be quiet about it
(setq global-auto-revert-non-file-buffers t)
(setq auto-revert-verbose nil)

;; show line numbers in the side bar
(linum-mode -1)

;; dansysadm: Test message from within emacs
;; sengork:   @dansysadm finally an OS with a twitter client...
(require 'twittering-mode)

;; Handy if I can't be bothered regexin'
(require 'multiple-cursors)
(global-set-key (kbd "C-S-c C-S-c") 'mc/edit-lines)
(global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this)
(global-set-key (kbd "C->") 'mc/mark-next-like-this)
(global-set-key (kbd "C-<") 'mc/mark-previous-like-this)

;; magit love
(global-set-key (kbd "C-c z") 'magit-status)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Need to git-clone a few things to get this working
;; TODO: Work out how to get emacs to clone on startup.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; volume control for emacs - Fuck this is awesome
(autoload 'volume "volume"
     "Tweak your sound card volume." t)

;; VLC controll for emacs - Legen...Wait for it...Dary 
(add-to-list 'load-path "~/.emacs.d/bongo")
(autoload 'bongo "bongo"
  "Start Bongo by switching to a Bongo buffer." t)


(defun eval-region-or-buffer ()
  (interactive)
  (let ((debug-on-error t))
    (cond
     (mark-active
      (call-interactively 'eval-region)
      (message "Region evaluated!")
      (setq deactivate-mark t))
     (t
      (eval-buffer)
      (message "Buffer evaluated!")))))

(add-hook 'emacs-lisp-mode-hook
	  (lambda ()
	    (local-set-key (kbd "C-x w") 'eval-region-or-buffer)))

(add-to-list 'load-path
	      "~/.emacs.d/snippets")
(require 'yasnippet)
(yas-global-mode 1)
(show-paren-mode 1)

;; kill ring (C&P buffer)
(global-set-key (kbd "C-c k") 'browse-kill-ring)

;; Confluence 
;; login: M-x confluence-login
;; Search: M-x confluence-search
;; XML -> wiki:  cfln-convert-xml-to-wiki
;; wiki -> XML: cfln-convert-wiki-to-xml 

(require 'confluence)
(Setq confluence-url "https://confluence/rpc/xmlrpc")
(global-set-key (kbd "C-c w") 'cfln-convert-xml-to-wiki)
(global-set-key (kbd "C-c W") 'cfln-convert-wiki-to-xml)
